server:
  port: ${PORT_MS:8080}

app:
  numbus:
    urlDecoder: ${spring.security.oauth2.client.provider.keycloak.issuer-uri}/protocol/openid-connect/certs
  realm: digitalmedia

spring:
  application:
    name: api-gateway
  security:
    oauth2:
      client:
        registration:
          keycloak:
            scope: openid
#            provider: keycloak
            client-id: api-gateway
            client-secret: 745MnUKUHG5bp0RAwS8BjTkq9WrPvYDb
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:${server.port}/login/oauth2/code/{registrationId}
        provider:
          keycloak:
            issuer-uri: ${KEYCLOAK_URL:http://localhost:8082/}realms/${app.realm}
            authorization-uri: http://localhost:8082/realms/${app.realm}/protocol/openid-connect/auth
            user-info-uri: http://localhost:8082/realms/${app.realm}/protocol/openid-connect/userinfo
            jwk-set-uri: ${KEYCLOAK_URL:http://localhost:8082/}realms/${app.realm}/protocol/openid-connect/certs
#            token-uri: ${KEYCLOAK_URL:http://localhost:8082/}realms/${app.realm}/protocol/openid-connect/token
#            introspection-uri: http://localhost:8082/realms/${app.realm}/protocol/openid-connect/token/introspect
#            end-session-uri: http://localhost:8082/realms/digitalmedia/protocol/openid-connect/logout
#            check_session_iframe: http://localhost:8082/realms/digitalmedia/protocol/openid-connect/login-status-iframe.html
#            device_authorization_endpoint: http://localhost:8082/realms/${app.realm}/protocol/openid-connect/auth/device
#            pushed_authorization_request_endpoint: http://localhost:8082/realms/${app.realm}/protocol/openid-connect/ext/par/request
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
#      default-filters:
#        - TokenRelay
      routes:
        - id: moviesRoute
          uri: http://movies-service:8086/
          predicates:
            - Path=/movies/**
        - id: usersRoute
          uri: http://users-service:8087/
          predicates:
            - Path=/users/**
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_URL:http://localhost:8761/eureka}

logging:
  level:
    org:
      springframework:
        security: DEBUG